{"ast":null,"code":"var _jsxFileName = \"/Users/kurz/code/form_bug/src/App.js\";\nimport React from 'react';\nimport { Form, Button } from 'react-bootstrap';\n/* class App extends React.Component {\n  choice = ['1','2','3'];\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: this.choice[0],\n    };\n  }\n\n  nextChoice = () => {\n    console.log('Button pressed: Value', this.state.value);\n    const choice_now = this.choice.indexOf(this.state.value);\n    const choice_next = this.choice[(choice_now+1) % this.choice.length];\n    this.setState({value : choice_next});\n  };\n\n  render() {\n    return (\n      <div>\n      <Button onClick={this.nextChoice}>Next Choice</Button>\n      <SelectTest value = {this.state.value}/>\n      </div>\n    );\n  }\n}\n\nconst SelectTest = (props) =>{\n  return(\n    <Form>\n        <Form.Group controlId=\"testSelect\">\n          <Form.Label>Test Select</Form.Label>\n          <Form.Control \n          as=\"select\"\n          defaultValue={props.value}\n          readOnly>\n            <option value='1'>1</option>\n            <option value='2'>2</option>\n            <option value='3'>3</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"choiceDisplay\">\n          <Form.Label>Current Choice</Form.Label>\n          <Form.Control\n          type=\"text\"\n          defaultValue={props.value}\n          readOnly></Form.Control>\n        </Form.Group>\n      </Form>\n  )\n};\n */\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.modes = ['a', 'b', 'c'];\n\n    this.setMode = newMode => {\n      console.log('App.setMode', this.state.currentMode, newMode);\n      this.setState({\n        currentMode: newMode\n      });\n    };\n\n    this.nextMode = event => {\n      const index = this.modes.indexOf(this.state.currentMode);\n      const newMode = this.modes[(index + 1) % this.modes.length];\n      console.log('App.nextMode', this.state.currentMode, newMode);\n      this.setState({\n        currentMode: newMode\n      });\n    };\n\n    this.state = {\n      currentMode: this.modes[2]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SelectMode, {\n      modes: this.modes,\n      currentMode: this.state.currentMode,\n      handleChange: this.setMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.nextMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"Next mode\"));\n  }\n\n}\n\nconst SelectMode = props => {\n  console.log('SelectMode', props);\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    onChange: event => props.handleChange(event.target.value),\n    defaultValue: props.currentMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, props.modes.map(m => /*#__PURE__*/React.createElement(\"option\", {\n    key: m,\n    value: m,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }, m))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/kurz/code/form_bug/src/App.js"],"names":["React","Form","Button","App","Component","constructor","props","modes","setMode","newMode","console","log","state","currentMode","setState","nextMode","event","index","indexOf","length","render","SelectMode","handleChange","target","value","map","m"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAGhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAFnBC,KAEmB,GAFX,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAEW;;AAAA,SAOnBC,OAPmB,GAORC,OAAD,IAAa;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKC,KAAL,CAAWC,WAAtC,EAAmDJ,OAAnD;AACA,WAAKK,QAAL,CAAc;AAACD,QAAAA,WAAW,EAAEJ;AAAd,OAAd;AACH,KAVkB;;AAAA,SAYnBM,QAZmB,GAYPC,KAAD,IAAW;AAClB,YAAMC,KAAK,GAAG,KAAKV,KAAL,CAAWW,OAAX,CAAmB,KAAKN,KAAL,CAAWC,WAA9B,CAAd;AACA,YAAMJ,OAAO,GAAG,KAAKF,KAAL,CAAW,CAACU,KAAK,GAAC,CAAP,IAAY,KAAKV,KAAL,CAAWY,MAAlC,CAAhB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKC,KAAL,CAAWC,WAAvC,EAAoDJ,OAApD;AACA,WAAKK,QAAL,CAAc;AAACD,QAAAA,WAAW,EAAEJ;AAAd,OAAd;AACH,KAjBkB;;AAEf,SAAKG,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,KAAKN,KAAL,CAAW,CAAX;AADJ,KAAb;AAGH;;AAcDa,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,KAAK,EAAE,KAAKb,KADd;AAEE,MAAA,WAAW,EAAE,KAAKK,KAAL,CAAWC,WAF1B;AAGE,MAAA,YAAY,EAAE,KAAKL,OAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,KAAKO,QADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,CADJ;AAaH;;AApC+B;;AAuClC,MAAMM,UAAU,GAAIf,KAAD,IAAW;AAC5BI,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,KAA1B;AACA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,QAAQ,EAAEU,KAAK,IAAIV,KAAK,CAACgB,YAAN,CAAmBN,KAAK,CAACO,MAAN,CAAaC,KAAhC,CAFrB;AAGE,IAAA,YAAY,EAAElB,KAAK,CAACO,WAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGP,KAAK,CAACC,KAAN,CAAYkB,GAAZ,CAAgBC,CAAC,iBAAI;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAEA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,CAA3B,CAArB,CAJH,CADF,CADJ;AASD,CAXD;;AAaA,eAAevB,GAAf","sourcesContent":["import React from 'react';\nimport {Form, Button} from 'react-bootstrap';\n\n/* class App extends React.Component {\n  choice = ['1','2','3'];\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: this.choice[0],\n    };\n  }\n\n  nextChoice = () => {\n    console.log('Button pressed: Value', this.state.value);\n    const choice_now = this.choice.indexOf(this.state.value);\n    const choice_next = this.choice[(choice_now+1) % this.choice.length];\n    this.setState({value : choice_next});\n  };\n\n  render() {\n    return (\n      <div>\n      <Button onClick={this.nextChoice}>Next Choice</Button>\n      <SelectTest value = {this.state.value}/>\n      </div>\n    );\n  }\n}\n\nconst SelectTest = (props) =>{\n  return(\n    <Form>\n        <Form.Group controlId=\"testSelect\">\n          <Form.Label>Test Select</Form.Label>\n          <Form.Control \n          as=\"select\"\n          defaultValue={props.value}\n          readOnly>\n            <option value='1'>1</option>\n            <option value='2'>2</option>\n            <option value='3'>3</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"choiceDisplay\">\n          <Form.Label>Current Choice</Form.Label>\n          <Form.Control\n          type=\"text\"\n          defaultValue={props.value}\n          readOnly></Form.Control>\n        </Form.Group>\n      </Form>\n  )\n};\n */\n\nclass App extends React.Component {\n  modes = ['a', 'b', 'c'];\n\n  constructor(props) {\n      super(props);\n      this.state = {\n          currentMode: this.modes[2]\n      };\n  };\n\n  setMode = (newMode) => {\n      console.log('App.setMode', this.state.currentMode, newMode);\n      this.setState({currentMode: newMode});\n  };\n\n  nextMode = (event) => {\n      const index = this.modes.indexOf(this.state.currentMode);\n      const newMode = this.modes[(index+1) % this.modes.length];\n      console.log('App.nextMode', this.state.currentMode, newMode);\n      this.setState({currentMode: newMode});\n  };\n\n  render() {\n      return (\n          <div>\n            <SelectMode\n              modes={this.modes}\n              currentMode={this.state.currentMode}\n              handleChange={this.setMode}\n            />\n            <Button\n              onClick={this.nextMode}>\n              Next mode\n            </Button>\n          </div>\n      );\n  };\n}\n\nconst SelectMode = (props) => {\n  console.log('SelectMode', props);\n  return (\n      <Form>\n        <Form.Control\n          as=\"select\"\n          onChange={event => props.handleChange(event.target.value)}\n          defaultValue={props.currentMode}>\n          {props.modes.map(m => <option key={m} value={m}>{m}</option>)}\n        </Form.Control>\n      </Form>);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}